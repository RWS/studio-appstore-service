@model AppStoreIntegrationService.Model.ModalMessage;
@using AppStoreIntegrationService.Model;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<div class="modal fade" id="confirmationModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">@Model.Title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @Model.Message
            </div>
            <div class="modal-footer">
                @if (Model.ModalType == ModalType.SuccessMessage)
                {
                    if (!string.IsNullOrEmpty(Model.RequestPage) && Model.RequestPage.Equals("add"))
                    {
                        <button type="button" onclick="javascript: RedirectToPlugin('@Model.Id')" class="btn btn-secondary add-pluginBtn" data-dismiss="modal">Ok</button>
                    }
                    else if (!string.IsNullOrEmpty(Model.RequestPage) && Model.RequestPage.Equals("config"))
                    {
                        <button type="button" onclick="javascript: DiscardChanges()" class="btn btn-secondary" data-dismiss="modal">Redirect</button>
                        <button type="button" class="btn btn-success" data-dismiss="modal">Cancel</button>
                    }
                    else
                    {
                        <button type="button" onclick="javascript: ReloadPage()" class="btn btn-primary add-pluginBtn" style="margin-bottom:0px" data-dismiss="modal">Ok</button>
                    }
                }
                @if (Model.ModalType == ModalType.WarningMessage)
                {
                    if (!string.IsNullOrEmpty(Model.RequestPage) && new[] { "config", "edit" }.Any(page => page.Equals(Model.RequestPage)))
                    {
                        <button type="button" onclick="javascript: DiscardChanges()" class="btn btn-danger" data-dismiss="modal">Yes</button>
                        <button type="button" class="btn btn-success" data-dismiss="modal">No</button>
                    }
                    else
                    {
                        <button type="button" class="btn btn-success" style="margin-bottom:0px" data-dismiss="modal">Ok</button>
                    }
                }
            </div>
        </div>
    </div>
</div>

