@inject CustomizationHelper Helper;
@{
    var cookies = Context.Request.Cookies;
    var defaults = new[] { "navbar", "success", "select" };
}

<div class="modal fade" id="preferencesModal" tabindex="-1" aria-labelledby="preferencesModal" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content resizable draggable">
            <div class="modal-header cursor-move" onmousedown="BeginDrag()">
                <h5 class="modal-title fs-inherit" id="preferencesModal">Basic customization</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row mb-2">
                    <div class="col-12 align-items-center d-flex mb-2">
                        <label class="text-nowrap align-self-center col-4">Font size:</label>
                        <input onchange="ChangeFontSize('')" class="form-control form-control-sm fs-inherit" type="number" min="16" max="36" value="@(Helper.GetFontSizeForField(null, "16"))">
                    </div>
                    <div class="col-12 align-items-center d-flex mb-2">
                        <label class="text-nowrap align-self-center col-4">Font family:</label>
                        <div class="dropdown col-8">
                            <div class="border rounded w-100 p-2" role="button" id="dropDownToggle" data-bs-toggle="dropdown" aria-expanded="false" onclick="ApplyFonts()"> 
                                @(Helper.GetFontFamilyForField(null, "Select family..."))
                            </div>
                            <ul class="dropdown-menu custom-select p-0 w-100 fs-inherit" onscroll="ApplyFonts()" onclick="ChangeFontFamily('')" aria-labelledby="dropDownToggle">
                                @foreach (var font in Helper.FontFamilies)
                                {
                                    if (cookies["FontFamily"] == font)
                                    {
                                        <li class="dropdown-item" selected>@font</li>
                                    }
                                    else
                                    {
                                        <li class="dropdown-item">@font</li>
                                    }
                                }
                            </ul>
                        </div>
                    </div>
                    <div class="col-12 align-items-center d-flex mb-2">
                        <label class="text-nowrap align-self-center col-4">Default themes:</label>
                        <div class="w-50 d-flex">
                            <input type="color" onchange="ChangeBackground('')" class="form-control form-control-sm fs-inherit w-25 me-2" data-bs-toggle="tooltip" data-bs-placement="top" title="Background"
                                   value="@(Helper.GetBackgroundForField(null, "#28b059"))" />
                            <input type="color" onchange="ChangeForeground('')" class="form-control form-control-sm fs-inherit w-25" data-bs-toggle="tooltip" data-bs-placement="top" title="Foreground"
                                   value="@(Helper.GetForegroundForField(null, "#FFFFFF"))" />
                        </div>
                    </div>
                    <div class="col-12 align-items-center d-flex">
                        <label class="text-nowrap align-self-center col-4">Logo:</label>
                        <input type="text" onchange="ChangeLogo()" class="form-control form-control-sm fs-inherit" value="@cookies["LogoImage"]" />
                    </div>
                </div>
                <a href="#furtherCustomization" data-bs-toggle="modal" onclick="$('#preferencesModal').modal('hide')">Advanced customization</a>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary fs-inherit" data-bs-dismiss="modal">Close</button>
                <button type="button" onclick="RestorePreferences()" class="btn pa-admin-success-btn fs-inherit">Restore defaults</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="furtherCustomization" aria-hidden="true" aria-labelledby="furtherCustomization" tabindex="-1">
    <div class="modal-dialog modal-xl modal-dialog-scrollable">
        <div class="modal-content resizable draggable">
            <div class="modal-header cursor-move" onmousedown="BeginDrag()">
                <h5 class="modal-title" id="furtherCustomization">Advanced customization</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Target</th>
                            <th>Background</th>
                            <th>Foreground</th>
                            <th>Fontsize</th>
                            <th>FontFamily</th>
                        </tr>
                    </thead>
                    <tbody class="tbody-stripped">
                        @foreach (var field in Helper.Fields)
                        {
                            <tr>
                                <td class="align-middle">@field.Name</td>
                                <td class="text-center align-middle">
                                    <input onchange="ChangeBackground('-@field.Tag')" type="color" data-override="@string.IsNullOrEmpty(cookies[$"{field.Tag}BackgroundColor"])"
                                       id="@($"{field.Tag}Background")" value="@(Helper.GetBackgroundForField(field.Tag, field.DefaultBackground))" />
                                </td>
                                <td class="text-center align-middle">
                                    <input onchange="ChangeForeground('-@field.Tag')" type="color" data-override="@string.IsNullOrEmpty(cookies[$"{field.Tag}ForegroundColor"])"
                                       id="@($"{field.Tag}Foreground")" value="@(Helper.GetForegroundForField(field.Tag, field.DefaultForeground))" />
                                </td>
                                <td class="align-middle">
                                    <input class="form-control form-control-sm" type="number" onchange="ChangeFontSize('-@field.Tag')" min="16" max="36" id="@($"{field.Tag}Fontsize")"
                                       data-override="@string.IsNullOrEmpty(cookies[$"{field.Tag}Fontsize"])" value="@(Helper.GetFontSizeForField(field.Tag, "16"))" />
                                </td>
                                <td class="align-middle">
                                    <div class="dropdown">
                                        <div class="border rounded p-2" role="button" id="dropDownToggle@(field.Tag)" data-bs-toggle="dropdown" aria-expanded="false" onclick="ApplyFonts()" data-override="@string.IsNullOrEmpty(cookies[$"{field.Tag}FontFamily"])">
                                            @(Helper.GetFontFamilyForField(field.Tag, "Select family..."))
                                        </div>
                                        <ul class="dropdown-menu custom-select p-0 w-100 fs-inherit" onscroll="ApplyFonts()" onclick="ChangeFontFamily('-@field.Tag')" aria-labelledby="dropDownToggle@(field.Tag)">
                                            @foreach (var font in Helper.FontFamilies)
                                            {
                                                if (cookies[$"{field.Tag}FontFamily"]?.Replace('+', ' ') == font || (defaults.Any(x => x == field.Tag) && cookies["FontFamily"]?.Replace('+', ' ') == font))
                                                {
                                                    <li class="dropdown-item" selected>@font</li>
                                                }
                                                else
                                                {
                                                    <li class="dropdown-item">@font</li>
                                                }
                                            }
                                        </ul>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" data-bs-target="#preferencesModal" data-bs-toggle="modal" onclick="$('#furtherCustomization').modal('hide')">Back to basics</button>
            </div>
        </div>
    </div>
</div>