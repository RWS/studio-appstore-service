@inject SignInManager<IdentityUserExtended> SignInManager
@inject NotificationCenter notificationCenter
@{
    var notifications = await notificationCenter.GetNotificationsForUser(User.Identity.Name);
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link cursor-pointer active header-link" data-bs-toggle="modal" data-bs-target="#preferencesModal">Preferences</a>
        </li>

        <li class="nav-item">
            <a onclick="EnsurePreserved(() => { window.location.href = '/Plugins' })" class="nav-link cursor-pointer active header-link">Plugins List</a>
        </li>

        if (User.IsInRole("Administrator"))
        {
            <li class="nav-item">
                <a onclick="EnsurePreserved(() => { window.location.href = '/Settings' })" class="nav-link active cursor-pointer header-link">Settings</a>
            </li>
        }

        if (User.IsInRole("Developer"))
        {
            <li class="nav-item">
                <a onclick="EnsurePreserved(() => { window.location.href = '/Settings/ExportPlugins' })" class="nav-link active cursor-pointer header-link">Settings</a>
            </li>
        }

        <li class="nav-item">
            <a onclick="EnsurePreserved(() => { window.location.href = '/Identity/Account/Profile' })" class="active nav-link cursor-pointer header-link">Profile</a>
        </li>

        <li class="nav-item">
            <form asp-controller="Authentication" asp-action="Logout" asp-area="Identity" method="post">
                <button class="nav-link btn btn-link cursor-pointer fs-inherit active header-link" type="submit">Sign out</button>
            </form>
        </li>
        <li class="nav-item d-flex align-items-center">
            <div class="btn-group dropstart">
                <div class="position-relative" data-bs-toggle="dropdown" aria-expanded="false" data-bs-auto-close="outside">
                    <i class="fa fa-bell text-white"></i>
                    <i class="fa fa-exclamation-circle text-danger @(notifications.Any() ? null : "d-none")"></i>
                </div>
                <div class="dropdown-menu p-0">
                    @if (notifications.Any())
                    {
                        @foreach (var notification in notifications)
                        {
                            <div class="position-relative" contenteditable="false" spellcheck="false">
                                @Html.Raw(notification.Content)
                                <i class="fa fa-times position-absolute p-3 text-secondary cursor-pointer" onclick="RemoveNotification('@notification.Id')"></i>
                            </div>
                        }

                        <div class="d-flex justify-content-center">
                            <a class="text-decoration-none" href="#" onclick="RemoveNotifications()">Clear all</a>
                        </div>
                    }
                    else
                    {
                        <div style="width: 400px; height: 100px" class="d-flex justify-content-center align-items-center">
                            <p class="m-0">You have 0 notifications</p>
                        </div>
                    }
                </div>
            </div>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link active header-link" id="login" asp-controller="Authentication" asp-area="Identity" asp-action="Login">Sign in</a>
        </li>
    }
</ul>

<partial name="_CustomizationPartial" />
