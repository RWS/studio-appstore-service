@model ExtendedPluginVersion

<div class="p-3 border-bottom">
    @if (!Model.IsNewVersion)
    {
        <partial name="_VersionCommentPartial" model="@(Model.VersionId, true)" />
    }

    <input hidden name="Page" value="@Page.Version" />
    <input hidden asp-for="IsPrivatePlugin" value="true" />
    <input hidden asp-for="VersionId" />
    <input hidden asp-for="IsNewVersion" />
    <input hidden asp-for="PluginId" />
    <input hidden asp-for="VersionStatus" />

    <div id="versionDetails" class="m-0 ml-lg-3 mt-3">
        @for (int i = 0; i < Model.SupportedProducts?.Count; i++)
        {
            <input hidden asp-for="SupportedProducts[i]" />
        }

        <div class="d-flex align-content-center col-12 p-0 mb-3">
            <label class="col-4 m-0 align-self-center form-label" asp-for="VersionNumber">Version Number <span class="text-danger">*</span></label>
            <div class="w-100 d-flex flex-column">
                <input asp-for="VersionNumber" class="form-control manifest-field fs-inherit" oninput="UpdatePlaceholder()" />
                <span asp-validation-for="VersionNumber" class="text-danger"></span>
                <span id="VersionNumberManifestConflict" class="text-danger" @((bool?)TempData["IsVersionMatch"] ?? true ? "hidden" : null)>Plugin manifest conflict! Invalid version number!</span>
            </div>
        </div>
        <div class="d-flex align-content-center col-12 p-0 mb-3">
            <label class="col-4 m-0 align-self-center form-label" asp-for="MinimumRequiredVersionOfStudio">Minimum Studio Version </label>
            <div class="w-100">
                <input asp-for="MinimumRequiredVersionOfStudio" class="form-control manifest-field fs-inherit" />
                <span asp-validation-for="MinimumRequiredVersionOfStudio" class="text-danger"></span>
                <span id="MinVersionManifestConflict" class="text-danger" @((bool?)TempData["IsMinVersionMatch"] ?? true ? "hidden" : null)>Plugin manifest conflict! Invalid minimum version!</span>
            </div>
        </div>
        <div class="d-flex align-content-center col-12 p-0 mb-3">
            <label class="col-4 m-0 align-self-center form-label" asp-for="MaximumRequiredVersionOfStudio">Maximum Studio Version </label>
            <div class="w-100">
                <input asp-for="MaximumRequiredVersionOfStudio" class="form-control manifest-field fs-inherit" />
                <span asp-validation-for="MaximumRequiredVersionOfStudio" class="text-danger"></span>
                <span id="MaxVersionManifestConflict" class="text-danger" @((bool?)TempData["IsMaxVersionMatch"] ?? true ? "hidden" : null)>Plugin manifest conflict! Invalid maximum version!</span>
            </div>
        </div>
        <div class="d-flex align-content-center col-12 p-0 mb-3">
            <label class="col-4 m-0 align-self-center" asp-for="DownloadUrl">Download URL <span class="text-danger">*</span></label>
            <div class="w-100">
                <input asp-for="DownloadUrl" class="form-control fs-inherit" onchange="GenerateChecksum()" />
                <span asp-validation-for="DownloadUrl" class="text-danger"></span>
            </div>
        </div>
        <div class="form-check d-flex align-content-center col-12 p-0 mb-3">
            <label class="col-4 m-0 form-check-label" asp-for="IsNavigationLink">Is navigation link</label>
            <input asp-for="IsNavigationLink" type="checkbox" class="m-0 align-self-center p-3 fs-inherit" />
        </div>
        <div class="form-check d-flex align-content-center col-12 p-0 mb-3">
            <label class="col-4 m-0 form-check-label" asp-for="AppHasStudioPluginInstaller">Has plugin extension</label>
            <input asp-for="AppHasStudioPluginInstaller" type="checkbox" class="m-0 align-self-center p-3 fs-inherit" />
        </div>
        <div class="mb-3 d-flex align-content-center col-12 p-0">
            <label class="col-4 m-0 align-self-center form-label" asp-for="FileHash">Checksum </label>
            <div class="d-flex flex-column w-100">
                <div class="input-group">
                    <input asp-for="FileHash" class="form-control ignore fs-inherit border-end-0" />
                    <span class="input-group-text bg-white">
                        <span class="spinner-border spinner-border-sm" hidden role="status" aria-hidden="true" />
                    </span>
                </div>
                <span asp-validation-for="FileHash" class="text-danger"></span>
            </div>
        </div>
        <div class="d-flex align-content-center col-12 p-0 mb-3">
            <label class="col-4 m-0 align-self-center form-label" asp-for="SupportedProducts">Products</label>
            <div class="col-8">
                <div class="dropdown w-100" id="productsDropdown">
                    <div class="w-100 border rounded p-2 d-flex justify-content-between" role="button" id="dropDownToggle" data-bs-auto-close="outside" data-bs-toggle="dropdown" aria-expanded="false">
                        <div class="d-flex align-items-center w-100">
                            <i class="fa fa-chevron-left p-2 overflow-arrow cursor-pointer d-none"></i>
                            <div class="d-flex selection-summary">
                                Select...
                            </div>
                            <i class="fa fa-chevron-right p-2 overflow-arrow cursor-pointer d-none"></i>
                        </div>
                        <div class="col-1 d-flex align-items-center justify-content-center">
                            <i class="fa fa-caret-down"></i>
                        </div>
                    </div>
                    <ul class="dropdown-menu custom-select p-0 w-100 fs-inherit" id="ProductsSelect" aria-labelledby="dropDownToggle">
                        @foreach (var item in Model.SupportedProductsListItems)
                        {
                            var isSelected = Model.SupportedProducts?.Any(p => p.Equals(item.Value)) ?? false;
                            <li class="dropdown-item" @((bool)isSelected ? "selected" : "") id="@item.Value">@item.Text</li>
                        }
                    </ul>
                    <select asp-for="SupportedProducts" hidden multiple="multiple" asp-items="@Model.SupportedProductsListItems"></select>
                </div>
                <span asp-validation-for="SupportedProducts" class="text-danger"></span>
                <span id="ProductManifestConflict" class="text-danger" @((bool?)TempData["IsProductMatch"] ?? true ? "hidden" : null)>Plugin manifest conflict! Invalid product!</span>
            </div>
        </div>
        @if (User.IsInRole("Developer"))
        {
            <button class="btn pa-admin-success-btn" onclick="SaveVersion('@Model.PluginId', 'InReview')">Submit</button>
            <button class="btn pa-admin-outline-success-btn" onclick="SaveVersion('@Model.PluginId','Draft')">Save as draft</button>
        }
        else
        {
            if (Model.VersionStatus.Equals(Status.InReview))
            {
                if (User.IsInRole("Administrator"))
                {
                    <button class="btn pa-admin-success-btn" onclick="SaveVersion('@Model.PluginId', 'Active')">Approve</button>
                }
            }
            else
            {
                <button class="btn pa-admin-success-btn" onclick="SaveVersion('@Model.PluginId')">Save</button>
            }
        }
    </div>
</div>
